{"version":3,"sources":["components/chatfeed/mymessage.jsx","components/chatfeed/theirmessage.jsx","components/chatfeed/messageform.jsx","components/chatfeed/chatfeed.jsx","components/chatfeed/loginform.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NACaA,EAAY,SAAC,GAAiB,IAAD,EAAdC,EAAc,EAAdA,QAC1B,OAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBC,QAAS,EAE/B,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,UACJC,UAAU,gBACVC,MAAO,CAAEC,MAAO,WAKpB,qBACEF,UAAU,UACVC,MAAO,CACLC,MAAO,QACPC,YAAa,GACbC,MAAO,QACPC,gBAAiB,WANrB,SASGX,EAAQY,QCrBFC,EAAe,SAAC,GAA8B,IAAD,IAA3BC,EAA2B,EAA3BA,YAAad,EAAc,EAAdA,QACpCe,GACHD,GAAeA,EAAYE,OAAOC,WAAajB,EAAQgB,OAAOC,SACjE,OACE,sBAAKX,UAAU,cAAf,UACGS,GACC,qBACET,UAAU,iBACVC,MAAO,CAAEW,gBAAgB,OAAD,cAASlB,QAAT,IAASA,GAAT,UAASA,EAASgB,cAAlB,aAAS,EAAiBG,OAA1B,SAGpB,OAAPnB,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsBC,QAAS,EAC9B,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,UACJC,UAAU,gBACVC,MAAO,CAAEa,WAAYL,EAAuB,MAAQ,UAGtD,qBACET,UAAU,UACVC,MAAO,CACLC,MAAO,OACPG,gBAAiB,OACjBS,WAAYL,EAAuB,MAAQ,QAL/C,SAQGf,EAAQY,W,yBCxBNS,EAAc,SAACC,GAAW,IAAD,EACVC,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,KAE5BC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MACVC,EAAe,SAACC,GACpBA,EAAMC,iBACN,IAAMlB,EAAOY,EAAMO,OACfnB,EAAKV,OAAS,GAAG8B,YAAYL,EAAOD,EAAQ,CAAEd,SAClDa,EAAS,KAUX,OACE,uBAAMnB,UAAU,eAAe2B,SAAUL,EAAzC,UACE,uBACEtB,UAAU,gBACV4B,YAAY,qBACZV,MAAOA,EACPW,SAde,SAACN,GACpBJ,EAASI,EAAMO,OAAOZ,OACtBa,YAASf,EAAOI,IAaZO,SAAUL,IAEZ,uBAAOU,QAAQ,gBAAf,SACE,sBAAMhC,UAAU,eAAhB,SACE,cAACiC,EAAA,EAAD,CAAiBjC,UAAU,qBAG/B,uBACEkC,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHnC,MAAO,CAAEoC,QAAS,QAClBR,SAvBe,SAACN,GACpBG,YAAYL,EAAOD,EAAQ,CAAEkB,MAAOf,EAAMO,OAAOQ,MAAOhC,KAAM,QAwB5D,yBAAQ4B,KAAK,SAASlC,UAAU,cAAhC,UACE,cAACuC,EAAA,EAAD,CAAcvC,UAAU,cAAe,WCvClCwC,EAAW,SAACxB,GAAW,IAC1ByB,EAA0CzB,EAA1CyB,MAAOC,EAAmC1B,EAAnC0B,WAAYC,EAAuB3B,EAAvB2B,SAAUC,EAAa5B,EAAb4B,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACpD,EAASqD,GACnC,OAAOF,EAAKG,OAAOC,KACjB,SAACC,EAAQC,GAAT,aACED,EAAOE,YAAc1D,EAAQ0C,IAC3B,qBAEEpC,UAAU,eACVC,MAAO,CACLC,MAAO6C,EAAc,QAAU,OAC/BnC,gBAAgB,OAAD,cAASsC,QAAT,IAASA,GAAT,UAASA,EAAQA,cAAjB,aAAS,EAAgBrC,OAAzB,OALnB,eACesC,QA2CvB,OAAKN,EAEH,sBAAK7C,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,gBAA6B6C,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMQ,QACnC,qBAAKrD,UAAU,gBAAf,SACG6C,EAAKG,OAAOC,KAAI,SAACC,GAAD,iBAAgBA,EAAOA,OAAOvC,kBAvChC,WACrB,IAAM2C,EAAOC,OAAOD,KAAKV,GACzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GACpB,IAAMzD,EAAUkD,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAQ,GACnDJ,EAAcJ,IAAajD,EAAQgB,OAAOC,SAEhD,OACE,sBAA0BV,MAAO,CAAEyD,MAAO,QAA1C,UACE,qBAAK1D,UAAU,gBAAf,SACG+C,EACC,cAAC,EAAD,CAAWrD,QAASA,IAEpB,cAAC,EAAD,CACEA,QAASA,EACTc,YAAaoC,EAASa,OAI5B,qBACEzD,UAAU,gBACVC,MAAO,CACLE,YAAa4C,EAAc,OAAS,MACpCjC,WAAYiC,EAAc,MAAQ,QAJtC,SAOGD,EAAmBpD,EAASqD,OAlBjC,cAAiBI,OAkClBQ,GACD,qBAAK1D,MAAO,CAAE2D,OAAQ,OACtB,qBAAK5D,UAAU,yBAAf,SACE,cAAC,EAAD,2BAAiBgB,GAAjB,IAAwBI,OAAQsB,UAZpB,c,oDCvDPmB,EAAY,WAAO,IAAD,EACG5C,mBAAS,IADZ,mBACtBN,EADsB,KACZmD,EADY,OAEG7C,mBAAS,IAFZ,mBAEtB8C,EAFsB,KAEZC,EAFY,OAGH/C,mBAAS,IAHN,mBAGtBgD,EAHsB,KAGfC,EAHe,KAIvB5C,EAAY,uCAAG,WAAO6C,GAAP,eAAAC,EAAA,6DACnBD,EAAE3C,iBACI6C,EAAa,CACjB,aAAc,uCACd,YAAa1D,EACb,cAAeoD,GALE,kBAQXO,IAAMC,IAAI,kCAAmC,CACjDC,QAASH,IATM,OAWjBI,aAAaC,QAAQ,WAAY/D,GACjC8D,aAAaC,QAAQ,WAAYX,GACjCY,OAAOC,SAASC,SAbC,kDAejBX,EAAS,mCAfQ,0DAAH,sDAkBlB,OACE,qBAAKlE,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,uBAAM2B,SAAUL,EAAhB,UACE,uBACEY,KAAK,OACLhB,MAAOP,EACPkB,SAAU,SAACsC,GAAD,OAAOL,EAAYK,EAAErC,OAAOZ,QACtClB,UAAU,QACV4B,YAAY,YACZkD,UAAQ,IAEV,uBACE5C,KAAK,WACLhB,MAAO6C,EACPlC,SAAU,SAACsC,GAAD,OAAOH,EAAYG,EAAErC,OAAOZ,QACtClB,UAAU,QACV4B,YAAY,WACZkD,UAAQ,IAEV,qBAAKC,MAAM,SAAX,SACE,wBAAQ/E,UAAU,SAASkC,KAAK,SAAhC,SACE,sDAGJ,oBAAIlC,UAAU,QAAd,SAAuBiE,aC5BlBe,MAhBf,WACE,OAAKP,aAAaQ,QAAQ,YAExB,cAAC,IAAD,CACErB,OAAO,QAIPsB,UAAU,uCACVvC,SAAU8B,aAAaQ,QAAQ,YAC/BE,WAAYV,aAAaQ,QAAQ,YACjCG,eAAgB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,OAVN,cAAC,EAAD,KCKjCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.031bde5d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nexport const MyMessage = ({ message }) => {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"Picture\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: 18,\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nexport const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"Picture\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"gray\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\nexport const MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const text = value.trim();\r\n    if (text.length > 0) sendMessage(creds, chatId, { text });\r\n    setValue(\"\");\r\n  };\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props, chatId);\r\n  };\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message ...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleUpload}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />{\" \"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { MyMessage } from \"./mymessage\";\r\nimport { TheirMessage } from \"./theirmessage\";\r\nimport { MessageForm } from \"./messageform\";\r\nexport const ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => {\r\n    return chat.people.map(\r\n      (person, index) =>\r\n        person.last_read === message.id && (\r\n          <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n              float: isMyMessage ? \"right\" : \"left\",\r\n              backgroundImage: `url(${person?.person?.avatar})`,\r\n            }}\r\n          />\r\n        )\r\n    );\r\n  };\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <TheirMessage\r\n                message={message}\r\n                lastMessage={messages[lastMessageKey]}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-receipts\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return \"loading...\";\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: 100 }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nexport const LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const authObject = {\r\n      \"Project-ID\": \"01140238-4e95-4493-9101-9f29097594ee\",\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n      window.location.reload();\r\n    } catch (error) {\r\n      setError(\"Incorrect User Name or Password\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"User Name\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button className=\"button\" type=\"submit\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n          <h2 className=\"error\">{error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport { ChatFeed } from \"./components/chatfeed/chatfeed\";\nimport \"./App.css\";\nimport { LoginForm } from \"./components/chatfeed/loginform\";\n\nfunction App() {\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      // userName=\"Usama\"\n      // userSecret=\"123\"\n      // projectID=\"01140238-4e95-4493-9101-9f29097594ee\"\n      projectID=\"01140238-4e95-4493-9101-9f29097594ee\"\n      userName={localStorage.getItem(\"username\")}\n      userSecret={localStorage.getItem(\"password\")}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}