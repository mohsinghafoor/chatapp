{"version":3,"sources":["components/chatfeed/mymessage.jsx","components/chatfeed/theirmessage.jsx","components/chatfeed/messageform.jsx","components/chatfeed/chatfeed.jsx","App.js","reportWebVitals.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","ChatFeed","props","chats","activeChat","userName","messages","chat","title","people","map","person","keys","Object","key","index","lastMessageKey","isMyMessage","width","renderMessages","height","chatId","App","projectID","userSecret","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36676b19.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nexport const MyMessage = (message) => {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"Picture\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: 18,\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nexport const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"Picture\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            marginRight: 18,\r\n            color: \"white\",\r\n            backgroundColor: \"#3B2A50\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nexport const MessageForm = () => {\r\n  return <div>Message Form</div>;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { MyMessage } from \"./mymessage\";\r\nimport { TheirMessage } from \"./theirmessage\";\r\nimport { MessageForm } from \"./messageform\";\r\nexport const ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <TheirMessage\r\n                message={message}\r\n                lastMessage={messages[lastMessageKey]}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-receipts\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            read receipts\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return \"loading...\";\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => `${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: 100 }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport { ChatFeed } from \"./components/chatfeed/chatfeed\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID=\"01140238-4e95-4493-9101-9f29097594ee\"\n      userName=\"chatapp\"\n      userSecret=\"123\"\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}